//=============================================================================
//【 LSound 】
//-----------------------------------------------------------------------------
///**
//  @file       LSound.h
//  @brief      LSound
//  @version    1.0
//  @date       2010/11/25
//*/
//=============================================================================

#pragma once

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
#include "../../Core/Audio/Sound.h"
#include "../Base/LRefClass.h"
#include "../Math/LMath.h"

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
namespace LNote
{

//=============================================================================
// ■ LSound クラス
//-----------------------------------------------------------------------------
///**
//	@brief      音声とその再生を扱うクラス
//*/
//=============================================================================
class LSound
    : public LRefClass< LSound, Core::Audio::ISound >
{
public:

    //---------------------------------------------------------------------
    ///**
    //  @brief      音声を作成する
    //
    //  @param[in]  filename_ : 音声ファイル名
    //  @param[in]  type_     : 再生方法
    //
    //  @par
    //              読み込むことができるファイル形式は以下の4つです。<br>
    //              <br>
    //                  - Wave ( .wav )
    //                  - MP3  ( .MP3 )
    //                  - Ogg  ( .ogg )
    //                  - MIDI ( .mid )
    //              <br>
    //              type_ は、オンメモリで再生するか、ストリーミングで再生するかの指定です。<br>
    //              通常は以下のいずれかの値を指定します。<br>
    //              <br>
    //                  - LN_SOUNDPLAYTYPE_AUTO
	//                  - LN_SOUNDPLAYTYPE_ONMEMORY
	//                  - LN_SOUNDPLAYTYPE_STREAMING
    //              <br>
    //              LN_SOUNDPLAYTYPE_AUTO を指定すると、デコード後の音声データのサイズに応じて
    //              自動的に再生方法が選択されます。<br>
    //              デフォルトではデコード後のサイズが 50000 バイト以上になる場合はストリーミング、
    //              そうでない場合はオンメモリ再生になります。<br>
    //*/
    //---------------------------------------------------------------------
	static LSound create( const char* filename_, LNSoundPlayType type_ = LN_SOUNDPLAYTYPE_AUTO );

    //---------------------------------------------------------------------
    ///**
    //  @brief      3D 音源として音声を作成する
    //
    //  @param[in]  filename_ : 音声ファイル名
    //  @param[in]  type_     : 再生方法
    //*/
    //---------------------------------------------------------------------
	static LSound create3D( const char* filename_, LNSoundPlayType type_ = LN_SOUNDPLAYTYPE_AUTO );

public:

    /// 音量の取得 (0〜100)
	int getVolume();

	/// 音量の設定 (0〜100)
	void setVolume( int volume_ );

	/// ピッチの取得 (50〜200)
	int getPitch();

	/// ピッチの設定 (50〜200)
	void setPitch( int pitch_ );

    /// サウンドの状態を取得する
    void getState( LNAudioPlayState* state_ ) const;

    /// ループ再生の有効設定
    void loop( bool loop_ );

    /// ループ再生が有効かを判定する
    bool isLoop();

    /// ループ情報の設定
	void setLoopState( u32 begin_, u32 length_ );

    /// 再生
	void play();

    /// 停止
	void stop();

    //---------------------------------------------------------------------
    ///**
    //  @brief      一時停止
    //
    //  @param[in]  is_pause_ : true の場合一時停止する ( 解除するには false を渡します )
    //*/
    //---------------------------------------------------------------------
	void pause( bool is_pause_ );

    //---------------------------------------------------------------------
	///**
    //  @brief      音量のフェード
    //
    //  @param[in]  target_volume_ : 変更先の音量
    //  @param[in]  time_          : フェードにかける時間 (ミリ秒)
    //  @param[in]  state_         : フェード完了後の動作の指定
    //*/
    //---------------------------------------------------------------------
	void fadeVolume( int target_volume_, int time_, LNSoundFadeState state_ = LN_SOUNDFADE_CONTINUE );

    //---------------------------------------------------------------------
	///**
    //  @brief      3D 音源としての位置を設定する
    //
    //  @param[in]  pos_ : 設定する位置
    //
    //  @par
    //              音声を 3D 音源として作成した場合にのみ有効です。
    //*/
    //---------------------------------------------------------------------
    void setPosition( const LVector3& pos_ );


    LN_UTIL_REFCLASS_METHODS( LSound, Core::Audio::ISound );
};

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------

} // namespace LNote

//=============================================================================
//                              end of file
//=============================================================================