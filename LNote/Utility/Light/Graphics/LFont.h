//=============================================================================
//【 LFont 】
//-----------------------------------------------------------------------------
///**
//  @file       LFont.h
//  @brief      LFont
//  @version    1.0
//  @date       2011/12/25
//*/
//=============================================================================

#pragma once

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
#include "../../Core/Graphics/Interface.h"

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
namespace LNote
{

//=============================================================================
// ■ LFont クラス
//-----------------------------------------------------------------------------
///**
//  @brief      フォントのクラス
//*/
//=============================================================================
class LFont
    : public LRefClass< LFont, Core::Graphics::IFont >
{
public:

    //---------------------------------------------------------------------
    ///**
    //  @brief      デフォルトの設定でフォントを作成する
    //*/
    //---------------------------------------------------------------------
    static LFont createDefaultFont();

    //---------------------------------------------------------------------
    ///**
    //  @brief      デフォルトのフォントを取得する
    //*/
    //---------------------------------------------------------------------
    static LFont getDefaultFont();

public:

    //---------------------------------------------------------------------
    ///**
    //  @brief      フォントサイズの設定
    //*/
    //---------------------------------------------------------------------
	void setSize( int size_ );

    //---------------------------------------------------------------------
    ///**
    //  @brief      フォントサイズの取得
    //*/
    //---------------------------------------------------------------------
	int getSize();

    //---------------------------------------------------------------------
    ///**
    //  @brief      フォントカラーの設定
    //*/
    //---------------------------------------------------------------------
	void setColor( const LColor& color_ );

    //---------------------------------------------------------------------
    ///**
    //  @brief      フォントカラーの設定
    //*/
    //---------------------------------------------------------------------
	void setColor( lnfloat r_, lnfloat g_, lnfloat b_, lnfloat a_ );

    //---------------------------------------------------------------------
    ///**
    //  @brief      フォントカラーの取得
    //*/
    //---------------------------------------------------------------------
	const LColor& getColor();

    //---------------------------------------------------------------------
    ///**
    //  @brief      エッジの幅の設定
    //
    //  @par
    //              1 以上の値を設定した場合、エッジの描画が行われます。
    //*/
    //---------------------------------------------------------------------
	void setEdgeSize( int size_ );

    //---------------------------------------------------------------------
    ///**
    //  @brief      エッジの幅の取得
    //*/
    //---------------------------------------------------------------------
	int getEdgeSize();

    //---------------------------------------------------------------------
    ///**
    //  @brief      エッジカラーの設定
    //*/
    //---------------------------------------------------------------------
	void setEdgeColor( const LColor& color_ );

    //---------------------------------------------------------------------
    ///**
    //  @brief      エッジカラーの設定
    //*/
    //---------------------------------------------------------------------
	void setEdgeColor( lnfloat r_, lnfloat g_, lnfloat b_, lnfloat a_ );

    //---------------------------------------------------------------------
    ///**
    //  @brief      エッジカラーの取得
    //*/
    //---------------------------------------------------------------------
	const LColor& getEdgeColor();

    //---------------------------------------------------------------------
    ///**
    //  @brief      太文字の設定
    //*/
    //---------------------------------------------------------------------
	void setBold( bool flag_ );

    //---------------------------------------------------------------------
    ///**
    //  @brief      太文字の判定
    //*/
    //---------------------------------------------------------------------
	bool isBold();

    //---------------------------------------------------------------------
    ///**
    //  @brief      イタリック体の設定
    //*/
    //---------------------------------------------------------------------
	void setItalic( bool flag_ );

    //---------------------------------------------------------------------
    ///**
    //  @brief      イタリック体の判定
    //*/
    //---------------------------------------------------------------------
	bool isItalic();

    //---------------------------------------------------------------------
    ///**
    //  @brief      アンチエイリアスの有効設定
    //
    //  @par
    //              エッジ描画とアンチエイリアスが有効になっている場合、
    //              それ以外の場合と比べて多くののメモリを使用します。(約 8 倍)<br>
    //              大きなフォントを作りすぎないように注意してください。
    //*/
    //---------------------------------------------------------------------
	void setAntiAlias( bool flag_ );

    //---------------------------------------------------------------------
    ///**
    //  @brief      アンチエイリアスの有効判定
    //*/
    //---------------------------------------------------------------------
	bool isAntiAlias();

    //---------------------------------------------------------------------
    ///**
    //  @brief      文字列を描画したときのサイズ (ピクセル単位) の取得
    //
    //  @param[in]  text_ : チェックする文字列
    //  @param[in]  len_  : 文字数 (-1 を指定すると終端までチェックする)
    //  @param[out] rect_ : 結果を格納する変数へのポインタ
    //
    //  @par
    //              結果の幅と高さは rect_ の width、heiht に格納されます。
    //              現在、rect_ の x、y 要素には常に 0 が格納されます。
    //*/
    //---------------------------------------------------------------------
    void getTextSize( const lnChar* text_, int len_, LRect* rect_ );


    LN_UTIL_REFCLASS_METHODS( LFont, Core::Graphics::IFont );
};


//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------

} // namespace LNote

//=============================================================================
//                              end of file
//=============================================================================