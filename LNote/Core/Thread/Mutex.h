//=============================================================================
//【 Mutex 】
//-----------------------------------------------------------------------------
///**
//  @file       Mutex.h
//  @brief      Mutex
//  @author     Riki
//*/
//=============================================================================

#pragma once

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------


//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
namespace LNote
{
namespace Core
{
namespace Thread
{

//=============================================================================
// ■ Mutex クラス
//-----------------------------------------------------------------------------
///**
//  @brief      ミューテックスのクラス
//
//  @note
//              MemoryManager で使っているので、このクラスの中で LN_NEW しないこと。
//*/
//=============================================================================
class Mutex
    : public Base::ReferenceObject
{
public:

    /// コンストラクタ
    Mutex();

    /// デストラクタ
    ~Mutex();

public:
	
    //---------------------------------------------------------------------
    ///**
    //  @brief      ロック
    //*/
    //---------------------------------------------------------------------
    void lock();

    //---------------------------------------------------------------------
    ///**
    //  @brief      アンロック
    //*/
    //---------------------------------------------------------------------
    void unlock();

private:

#if defined(LNOTE_WINDOWS)
	HANDLE mHandle;
    //mutable CRITICAL_SECTION mCriticalSection;
#else
    pthread_mutex_t mMutex;
#endif
};

//=============================================================================
// ■ ScopedLock
//-----------------------------------------------------------------------------
///**
//  @brief      
//*/
//=============================================================================
class ScopedLock  
{
public:

    ScopedLock( Mutex& mutex )
        : mMutex( mutex )
    {
        mMutex.lock();
    }

    ~ScopedLock()
    {
        mMutex.unlock();
    }

private:

    Mutex& mMutex;
};

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------

} // namespace Thread
} // namespace Core
} // namespace LNote

//=============================================================================
//								end of file
//=============================================================================