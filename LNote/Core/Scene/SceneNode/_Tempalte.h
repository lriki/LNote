//=============================================================================
//【 _Tempalte 】
//-----------------------------------------------------------------------------
///**
//  @file       _Tempalte.h
//  @brief      _Tempalte
//  @author     Riki
//*/
//=============================================================================

#pragma once
#if 0
//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
#include "SceneNode.h"

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
namespace LNote
{
namespace Core
{
namespace Scene
{

//=============================================================================
// ■ _Tempalte
//-----------------------------------------------------------------------------
///**
//  @brief		
//*/
//=============================================================================
class _Tempalte
    : public SceneNode
{
public:

    _Tempalte( SceneGraph* scene_ );

    virtual ~_Tempalte();

public:

    /// 初期化
    void initialize();

public:

    /// ノードの種類の取得
    virtual LNSceneNodeType getSceneNodeType() const { return LN_SCENENODE_XXXX; }

    /// サブセットを描画する
    virtual LNRESULT drawSubset( lnU32 index_ );

private:
    
};

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------

} // namespace Scene
} // namespace Core
} // namespace LNote
#endif
//=============================================================================
//                              end of file
//=============================================================================