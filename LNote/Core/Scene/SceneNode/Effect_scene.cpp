//=============================================================================
//【 Effect 】
//=============================================================================

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
#include "stdafx.h"
#include "../../Graphics/Manager.h"
#include "../SceneGraph.h"
#include "Effect.h"

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
namespace LNote
{
namespace Core
{
namespace Scene
{

//=============================================================================
// ■ Effect クラス
//=============================================================================

    //---------------------------------------------------------------------
    // ● コンストラクタ
    //---------------------------------------------------------------------
    Effect::Effect( SceneGraph* scene_ )
        : SceneNode     ( scene_ )
        , mEffect       ( NULL )
    {
    }

    //---------------------------------------------------------------------
    // ● デストラクタ
    //---------------------------------------------------------------------
    Effect::~Effect()
    {
        LN_SAFE_RELEASE( mEffect );
    }

    //---------------------------------------------------------------------
    // ● 初期化
    //---------------------------------------------------------------------
    void Effect::initialize( Core::Effect::EffectCore* core_ )
    {
        SceneNode::initialize( 1, LN_DRAWCOORD_3D );

        mEffect = LN_NEW Core::Effect::EffectInstance( this->mSceneGraph->getEffectManager() );
        mEffect->initialize( core_ );
        
        this->setShader( NULL );
    }

    //---------------------------------------------------------------------
    //
    //---------------------------------------------------------------------
    void Effect::update( const Game::GameTime& time_ )
    {
        //mEffect->advanceTime( time_.getElapsedGameTime() );
    }

    //---------------------------------------------------------------------
    // ● サブセットを描画する
    //---------------------------------------------------------------------
    LNRESULT Effect::drawSubset( lnU32 index_ )
    {
        mEffect->draw();
        return LN_OK;
    }

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------

} // namespace Scene
} // namespace Core

} // namespace LNote

//=============================================================================
//                              end of file
//=============================================================================