//=============================================================================
//【 Box 】
//=============================================================================

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
#include "stdafx.h"
#include "Box.h"

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
namespace LNote
{
namespace Core
{
namespace Physics
{

//=============================================================================
// ■ Box クラス
//=============================================================================

    //---------------------------------------------------------------------
	// ● コンストラクタ
    //---------------------------------------------------------------------
    Box::Box( Manager* manager_ )
        : RigidBody ( manager_ )
    {
    }

    //---------------------------------------------------------------------
	// ● デストラクタ
    //---------------------------------------------------------------------
    Box::~Box()
    {
    }

    //---------------------------------------------------------------------
	// ● 初期化
    //---------------------------------------------------------------------
    void Box::initialize( const RigidBodyInitArgs& args_, const LVector3& size_ )
    {
        RigidBody::initialize( args_ );
        mSize = size_;
    }

    //---------------------------------------------------------------------
	// ● デバッグ用の形状描画
    //---------------------------------------------------------------------
    LNRESULT Box::drawDebugShape( IDebugRenderer* renderer_ )
    {
        LVector3 bbmin( -mSize.x * 0.5f, -mSize.y * 0.5f, -mSize.z * 0.5f );
        LVector3 bbmax(  mSize.x * 0.5f,  mSize.y * 0.5f,  mSize.z * 0.5f );

        renderer_->setMatrix( this->mWorldMatrix );
        return renderer_->drawBox( bbmin, bbmax, LColor( 0, 0, 1, 0.5f ) );
    }


//=============================================================================
// ■ TriMesh
//=============================================================================

    //---------------------------------------------------------------------
	//
    //---------------------------------------------------------------------
    TriMesh::TriMesh( Manager* manager_ )
        : RigidBody         ( manager_ )
        , mBtTriMeshData    ( NULL )
    {
    }

    //---------------------------------------------------------------------
	//
    //---------------------------------------------------------------------
    TriMesh::~TriMesh()
    {
        SAFE_DELETE( mBtTriMeshData );
    }

    //---------------------------------------------------------------------
	//
    //---------------------------------------------------------------------
    void TriMesh::initialize( const RigidBodyInitArgs& args_, btTriangleIndexVertexArray* bt_tri_mesh_data_ )
    {
        RigidBody::initialize( args_ );
        mBtTriMeshData = bt_tri_mesh_data_;
    }

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------

} // namespace Physics
} // namespace Core
} // namespace LNote

//=============================================================================
//								end of file
//=============================================================================