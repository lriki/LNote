//=============================================================================
//【 Plane 】
//-----------------------------------------------------------------------------
///**
//  @file       Plane.h
//  @brief      Plane
//  @author     Riki
//*/
//=============================================================================

#pragma once

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
#include "RigidBody.h"

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
namespace LNote
{
namespace Core
{
namespace Physics
{

//=============================================================================
// ■ Plane クラス
//-----------------------------------------------------------------------------
///**
//  @brief
//*/
//=============================================================================
class Plane
    : public RigidBody
{
public:
    Plane( Manager* manager_ );
    LN_REFOBJ_METHODS;

protected:
    virtual ~Plane();

public:

    /// 初期化
    void initialize( const RigidBodyInitArgs& args_ ) { RigidBody::initialize( args_ ); }

    /// デバッグ用の形状描画
    virtual LNRESULT drawDebugShape( IDebugRenderer* renderer_ );
};

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------

} // namespace Physics
} // namespace Core
} // namespace LNote

//=============================================================================
//								end of file
//=============================================================================