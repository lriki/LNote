//=============================================================================
// SpriteRenderer
//-----------------------------------------------------------------------------
//  SpriteRenderer 用シェーダ
//=============================================================================

//=============================================================================
// HLSL
//=============================================================================
@hlsl

float4x4        gViewProjMatrix     : VIEWPROJECTION;

texture2D gMaterialTexture          : MATERIALTEXTURE;
sampler gTexSampler = sampler_state
{
    /**/
    /* a */
    // a
    Texture = < gMaterialTexture >;
    MINFILTER = NONE;
    MAGFILTER = NONE;
};

struct VS_OUTPUT
{
    float4 Pos      : POSITION;
    float4 Color    : COLOR0;
    float2 TexUV    : TEXCOORD0;
};

//-------------------------------------------------------------------------
// vertex shader
//-------------------------------------------------------------------------
VS_OUTPUT vsBasic(
    float3 in_pos_      : POSITION,
    float4 in_color_    : COLOR0,
    float2 in_uv_       : TEXCOORD0 )
{
    VS_OUTPUT o;

    o.Pos = mul( float4( in_pos_, 1.0f ), gViewProjMatrix );
    o.Color = in_color_;
    o.TexUV = in_uv_;

    return o;
}

//-------------------------------------------------------------------------
// pixel shader
//-------------------------------------------------------------------------
float4 psBasic(
    float4 in_color_    : COLOR0,
    float2 in_uv_       : TEXCOORD0 ) : COLOR0
{
    return tex2D( gTexSampler, in_uv_ ) * in_color_;
}

//-------------------------------------------------------------------------
// technique
//-------------------------------------------------------------------------
technique MainDraw
{
    pass P0
    {
        VertexShader = compile vs_2_0 vsBasic();
        PixelShader	 = compile ps_2_0 psBasic();
    }
}

@endhlsl
//=============================================================================
// GLSL
//=============================================================================
@glslvert

uniform mat4    gViewProjMatrix;

attribute vec3  lnPosition;
attribute vec4  lnColor;
attribute vec2  lnTexCoord0;

varying vec4    vColor;
varying vec2    vTexUV;

void main()
{
    gl_Position = vec4( lnPosition, 1.0 ) * gViewProjMatrix;
    vColor      = lnColor;
    vTexUV      = lnTexCoord0;
    vTexUV.y    = 1.0 - vTexUV.y;
}

@endglslvert
//-------------------------------------------------------------------------
@glslflag

#ifdef GL_ES
precision mediump float;
#endif

uniform sampler2D gMaterialTexture;

varying vec4    vColor;
varying vec2    vTexUV;

void main(void)
{
    gl_FragColor = texture2D( gMaterialTexture, vTexUV ) * vColor;
}

@endglslflag
//-------------------------------------------------------------------------
@glslmeta
@endglslmeta

//=============================================================================
//
//=============================================================================
